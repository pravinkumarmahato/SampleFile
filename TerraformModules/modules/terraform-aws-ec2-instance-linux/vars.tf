variable "tags" {
  description = "Please reference the current tagging policy for required tags and allowed values.  See README for link to policy."
  type        = map(string)
}

variable "keypair_public_key" {
  description = "Public key to be used for guest OS authentication.  This can be generated by 'puttygen on Windows' or 'ssh-keygen on macOS/Linux'. The SSH2 Public Key needs to be converted into an OpenSSH Public Key format RFC4716 which is the required format for this input. On Windows, use puttygen to Load your new private key, then copy the ssh-rsa public key string from the text box at the top of the window. Use 'ssh-keygen Conversion' to convert to an ssh-rsa string."
  type        = string
  default     = null
}

variable "key_name" {
  description = "The key name of an existing Key Pair to use for the instance(s). Only use if 'keypair_public_key' is not supplied. Useful when sharing a Key Pair across multiple instances/deployments."
  type        = string
  default     = null
}

variable "ami_id" {
  description = "The ID of the AMI to use for this deployment.  See README for example on how to look this up dynamically."
  type        = string
}

variable "vpc_type" {
  description = "The type of vpc to deploy into.  Based on the 'Name' tag on the VPC.  This is case sensitive!"
  type        = string
}

variable "subnet_type" {
  description = "The type of subnet to use based on the 'Name' tag on the subnet.  This will return a map of all subnets (AZs) matching the specified filter.  Example: 'PrivateStatic', 'PrivateDynamic'"
  type        = string
}

variable "security_group_ids" {
  description = "A list of existing security groups to attach this instance to.  If specified, no security group will be created as part of this module."
  type        = list(string)
  default     = null
}

variable "instances" {
  description = "See object specific arguments in the README."
  type = map(object({
    availability_zone     = string
    custodian_offhours    = string
    enable_recovery_alarm = bool
    iam_instance_profile  = string
    instance_type         = string
    os_volume_size        = number
    os_volume_type        = string
    user_data             = string
  }))
}

variable "ingress_rules" {
  description = "See object specific arguments in the README."
  type = map(object({
    from_port       = string
    to_port         = string
    protocol        = string
    cidr_blocks     = list(string)
    security_groups = list(string)
    description     = string
    self            = bool
  }))
  default = {}
}

variable "egress_rules" {
  description = "See object specific arguments in the README."
  type = map(object({
    from_port       = string
    to_port         = string
    protocol        = string
    cidr_blocks     = list(string)
    security_groups = list(string)
    description     = string
    self            = bool
  }))
  default = {}
}
